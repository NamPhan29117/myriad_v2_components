{"version":3,"file":"static/js/891.85a0b6b4.chunk.js","mappings":"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","sources":["components/CheckBoxGroupNotSearch/index.jsx","components/CheckboxGroup/index.jsx","components/DialogMessage/DialogErrorMessage.jsx","components/DialogMessage/DialogInfoMessage.jsx","components/DialogMessage/DialogWarningMessage.jsx","components/MultiChoice/index.jsx","components/RadioGroup/index.jsx","components/SingleChoice/index.jsx","pages/SettingPage/index.jsx"],"sourcesContent":["import React, {useState, useEffect} from 'react'\r\n// import { useForm } from \"react-hook-form\";\r\nimport '../CheckboxGroup/style.scss'\r\n\r\nexport default function CheckBoxGroupNotSearch({list}) {\r\n\r\n  const [isShow, setIsShow] = useState(false)\r\n  const [listValue, setListValue] = useState(list)\r\n  \r\n\r\n  // them value search co dieu kien de render , neu co value search uu tien \r\n\r\n  const onChangeValue = (e) =>{\r\n    const result = listValue.map((item)=>{\r\n        if(item.value === e.target.value){\r\n            return {\r\n                ...item,\r\n                checked: !item.checked\r\n            }\r\n        }\r\n        return item\r\n    })\r\n    setListValue(result)\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"checkbox-group-container\">\r\n        <div className=\"checkbox-group\">\r\n            <div className=\"checkbox-group__header\">\r\n                <img src=\"images/checkbox-checked.svg\" style={{width:\"15px\", height:\"15px\"}} alt=''/>\r\n                <span>{listValue[0].name}<span style={{marginLeft:\"2px\"}}>(default)</span></span>\r\n                <img alt='' onClick={()=>setIsShow((state)=>!state)} src=\"images/expand-vertical.svg\" style={{width: '10px', height: '11px', marginLeft:\"auto\"}}/>\r\n            </div>\r\n            {\r\n                isShow && (\r\n                    <div className=\"checkbox-group__body\">\r\n                       \r\n                        <form>\r\n                            {\r\n                                listValue.map((item)=>{\r\n                                    return (\r\n                                        <label className=\"wraper-checkbox\" key={item.value}>{item.name}\r\n                                            <input type=\"checkbox\" checked={item.checked} name={item.name} value={item.value} onChange={onChangeValue}/>\r\n                                            <span className=\"checkmark\"></span>\r\n                                        </label>\r\n                                    )\r\n                                    // return <div className=\"checkbox-group__item\" key={item.name}>\r\n                                    //     <input  type=\"checkbox\" name={item.name} value={item.value} checked={item.checked} onChange={onChangeValue}/>\r\n                                    //     <label>{item.name}</label>\r\n                                    // </div>\r\n                                })\r\n                            }\r\n                        </form>\r\n                    </div>\r\n                )\r\n            }\r\n            \r\n        </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n","import React, {useState, useMemo, useEffect} from 'react'\r\n// import { useForm } from \"react-hook-form\";\r\nimport './style.scss'\r\n\r\nexport default function CheckBoxGroup({list}) {\r\n\r\n  const [isShow, setIsShow] = useState(false)\r\n  const [keysearch, setKeySearch] = useState(\"\")\r\n  const [listValue, setListValue] = useState(list)\r\n  const [listSearch, setListSearch] = useState([])\r\n  \r\n\r\n    // them value search co dieu kien de render , neu co value search uu tien \r\n\r\n  const onChangeValue = (e) =>{\r\n    const result = listValue.map((item)=>{\r\n        if(item.value === e.target.value){\r\n            return {\r\n                ...item,\r\n                checked: !item.checked\r\n            }\r\n        }\r\n        return item\r\n    })\r\n    setListValue(result)\r\n\r\n    // change UI checked for list search\r\n    if(listSearch && listSearch.length > 0){\r\n        const resultSearch = listSearch.map((item)=>{\r\n            if(item.value === e.target.value){\r\n                return {\r\n                    ...item,\r\n                    checked: !item.checked\r\n                }\r\n            }\r\n            return item\r\n        })\r\n        setListSearch(resultSearch)\r\n    }\r\n  }\r\n\r\n\r\n  useEffect(()=>{\r\n      if(keysearch.trim() !== \"\"){\r\n        let result = list.filter((item)=>item.name.toLowerCase().trim().indexOf(keysearch.toLowerCase().trim()) !== -1)\r\n       let resultSearch = result.map((item)=>{\r\n            listValue.forEach((i)=>{\r\n                if(i.value === item.value){\r\n                    item = i\r\n                }\r\n            })\r\n            return item\r\n        })\r\n        setListSearch(resultSearch)\r\n      }else{\r\n        setListSearch([])\r\n      }\r\n  },[keysearch])\r\n\r\n\r\n  return (\r\n    <div className=\"checkbox-group-container\">\r\n        <div className=\"checkbox-group\">\r\n            <div className=\"checkbox-group__header\">\r\n                <img src=\"images/checkbox-checked.svg\" style={{width:\"15px\", height:\"15px\"}} alt=''/>\r\n                <span>{listValue[0].name}<span style={{marginLeft:\"2px\"}}>(default)</span></span>\r\n                <img alt='' onClick={()=>setIsShow((state)=>!state)} src=\"images/expand-vertical.svg\" style={{width: '10px', height: '11px', marginLeft:\"auto\"}}/>\r\n            </div>\r\n            {\r\n                isShow && (\r\n                    <div className=\"checkbox-group__body\">\r\n                        <div className=\"checkbox-group__search\">\r\n                            <input type=\"text\" value={keysearch} name=\"keysearch\" onChange={(e)=>setKeySearch(e.target.value)}/>\r\n                            <img alt='' src=\"images/search-icon.svg\"/>\r\n                        </div>\r\n                        <form>\r\n\r\n                            {listSearch && listSearch.length > 0 ? <>\r\n                                {\r\n                                    listSearch.map((item)=>{\r\n                                        return (\r\n                                            <label className=\"wraper-checkbox\" key={item.value}>{item.name}\r\n                                                <input type=\"checkbox\" checked={item.checked} name={item.name} value={item.value} onChange={onChangeValue}/>\r\n                                                <span className=\"checkmark\"></span>\r\n                                            </label>\r\n                                        )\r\n                                        // return <div className=\"checkbox-group__item\" key={item.name}>\r\n                                        //     <input  type=\"checkbox\" name={item.name} value={item.value} checked={item.checked} onChange={onChangeValue}/>\r\n                                        //     <label>{item.name}</label>\r\n                                        // </div>\r\n                                    })\r\n                                }\r\n                            </> : <>\r\n                                {\r\n                                    listValue.map((item)=>{\r\n                                        return (\r\n                                            <label className=\"wraper-checkbox\" key={item.value}>{item.name}\r\n                                                <input type=\"checkbox\" checked={item.checked} name={item.name} value={item.value} onChange={onChangeValue}/>\r\n                                                <span className=\"checkmark\"></span>\r\n                                            </label>\r\n                                        )\r\n                                        // return <div className=\"checkbox-group__item\" key={item.name}>\r\n                                        //     <input  type=\"checkbox\" name={item.name} value={item.value} checked={item.checked} onChange={onChangeValue}/>\r\n                                        //     <label>{item.name}</label>\r\n                                        // </div>\r\n                                    })\r\n                                }\r\n                            </>\r\n                                \r\n                            }\r\n                        </form>\r\n                    </div>\r\n                )\r\n            }\r\n            \r\n        </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n","\r\n\r\nimport React,{useState } from 'react'\r\nimport { Modal } from 'antd';\r\nimport './style.scss'\r\n\r\nexport default function DialogErrorMessage(props) {\r\n  const {titleBody} = props\r\n  const [visible, setVisible] = useState(true);\r\n  return (\r\n      <Modal\r\n        onCancel={() => setVisible(false)}\r\n        title={<img src=\"images/error-icon.svg\" alt=''/>}\r\n        centered\r\n        visible={visible}\r\n        width={404}\r\n        closable={false}\r\n        className=\"dialog-error\"\r\n        footer={[\r\n          <button key=\"left\" onClick={() => setVisible(false)} style={{marginRight:\"10px\"}} className='button' type='button'>Cancel</button>,\r\n          <button key=\"right\" className='button button--secondary'>Continue</button>\r\n        ]}\r\n      >\r\n       {titleBody && <h3>{titleBody}</h3>}\r\n       <p>How to hide the X button present at the top from the ant d modal, also how can I disable the behavior of closing </p>\r\n      </Modal>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n","\r\nimport React,{useState } from 'react'\r\nimport { Modal } from 'antd';\r\nimport './style.scss'\r\n\r\nexport default function DialogInfoMessage(props) {\r\n  const {titleBody,leftButton} = props\r\n  const [visible, setVisible] = useState(true);\r\n  return (\r\n      <Modal\r\n        onCancel={() => setVisible(false)}\r\n        title={<img src=\"images/info-icon.svg\" alt=''/>}\r\n        centered\r\n        visible={visible}\r\n        width={404}\r\n        closable={false}\r\n        className=\"dialog-info\"\r\n        footer={[\r\n          leftButton ? <button key=\"left\" onClick={() => setVisible(false)} style={{marginRight:\"10px\"}} className='button' type='button'>Cancel</button> : \"\",\r\n          <button key=\"right\" onClick={() => setVisible(false)} className='button button--secondary'>Continue</button>\r\n        ]}\r\n      >\r\n       {titleBody && <h3>{titleBody}</h3>}\r\n       <p>How to hide the X button present at the top from the ant d modal, also how can I disable the behavior of closing </p>\r\n      </Modal>\r\n  )\r\n}\r\n\r\n\r\n\r\n","import React,{useState } from 'react'\r\nimport { Modal } from 'antd';\r\nimport './style.scss'\r\n\r\nexport default function DialogWarningMessage(props) {\r\n  const {titleBody,onOke} = props\r\n  const [visible, setVisible] = useState(true);\r\n\r\n  const handleOkFunction = () =>{\r\n    onOke()\r\n    setVisible(false)\r\n  }\r\n\r\n  return (\r\n      <Modal\r\n        onCancel={() => setVisible(false)}\r\n        title={<img src=\"images/warning-icon.svg\" alt=''/>}\r\n        centered\r\n        visible={visible}\r\n        width={404}\r\n        closable={false}\r\n        className=\"dialog-warning\"\r\n        footer={[\r\n          <button key=\"left\" onClick={() => setVisible(false)} style={{marginRight:\"10px\"}} className='button' type='button'>Cancel</button>,\r\n          <button key=\"right\" onClick={handleOkFunction} className='button button--secondary'>Action</button>\r\n        ]}\r\n      >\r\n       {titleBody && <h3>{titleBody}</h3>}\r\n       <p>How to hide the X button present at the top from the ant d modal, also how can I disable the behavior of closing </p>\r\n      </Modal>\r\n  )\r\n}\r\n\r\n\r\n\r\n","import React,{useState} from 'react'\r\nimport  './style.scss'\r\n\r\nexport default function MultiChoice({list}) {\r\n  const [listValue, setListValue] = useState(list)\r\n\r\n  const onChangeValue = (e) =>{\r\n    const result = listValue.map((item)=>{\r\n        if(item.value === e.target.value){\r\n            return {\r\n                ...item,\r\n                checked: !item.checked\r\n            }\r\n        }\r\n        return item\r\n    })\r\n    setListValue(result)\r\n  }\r\n\r\n  return (\r\n    <div className=\"multi-choice\" style={{margin:\"auto\", width:\"150px\",marginTop:\"20px\"}}>\r\n      {\r\n        listValue.map((item)=>{\r\n          return (\r\n            <label className=\"wraper-checkbox\" key={item.value}>{item.name}\r\n              <input type=\"checkbox\" checked={item.checked} name={item.name} value={item.value} onChange={onChangeValue}/>\r\n              <span className=\"checkmark\"></span>\r\n          </label>\r\n          )\r\n        })\r\n      }\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useMemo, useEffect} from 'react'\r\n// import { useForm } from \"react-hook-form\";\r\nimport './style.scss'\r\n\r\nexport default function RadioGroup({list}) {\r\n\r\n  const [isShow, setIsShow] = useState(false)\r\n  const [keysearch, setKeySearch] = useState(\"\")\r\n  const [checked, setChecked] = useState(list[0])\r\n  const [listValue, setListValue] = useState(list)\r\n\r\n\r\n\r\n\r\n  const renderHeader = useMemo(()=>{\r\n\r\n    let itemChoice =  list.filter((item)=>{\r\n        return item.value === checked.value\r\n    })[0]\r\n    return itemChoice.name\r\n\r\n  },[checked,list])\r\n\r\n  const onChangeValue = (e) =>{\r\n      let checkedCurrent = list.filter((item)=>item.value === e.target.value)[0]\r\n    setChecked(checkedCurrent)\r\n  }\r\n\r\n  useEffect(()=>{\r\n      if(keysearch.trim() !== \"\"){\r\n        let result = list.filter((item)=>item.name.toLowerCase().trim().indexOf(keysearch.toLowerCase().trim()) !== -1)\r\n        setListValue(result)\r\n      }else{\r\n        setListValue(list)\r\n      }\r\n  },[keysearch,list])\r\n\r\n  return (\r\n    <div className=\"radio-group-container\">\r\n        <div className=\"radio-group\">\r\n            <div className=\"radio-group__header\">\r\n                <img src=\"images/radio-checked.svg\" style={{width:\"15px\", height:\"15px\"}} alt=\"\"/>\r\n                <span>{renderHeader}</span>\r\n                <img onClick={()=>setIsShow((state)=>!state)} src=\"images/expand-vertical.svg\" alt='' style={{width: '10px', height: '11px', marginLeft:\"auto\"}}/>\r\n            </div>\r\n            {\r\n                isShow && (\r\n                    <div className=\"radio-group__body\">\r\n                        <div className=\"radio-group__search\">\r\n                            <input type=\"text\" value={keysearch} name=\"keysearch\" onChange={(e)=>setKeySearch(e.target.value)}/>\r\n                            <img src=\"images/search-icon.svg\" alt=''/>\r\n                        </div>\r\n                        <form>\r\n                            {\r\n                                listValue.map((item)=>{\r\n\r\n                                    return (\r\n                                        <label className=\"wraper-radio\" key={item.value}>{item.name}\r\n                                            <input type=\"radio\" checked={item.value === checked.value} name=\"language\" value={item.value} onChange={onChangeValue}/>\r\n                                            <span className=\"checkmark\"></span>\r\n                                        </label>\r\n                                    )\r\n                                    // return <div className=\"radio-group__item\" key={item.name}>\r\n                                    //     <input  type=\"radio\" name=\"language\" value={item.value} checked={checked === item.value} onChange={onChangeValue}/>\r\n                                    //     <label>{item.name}</label>\r\n                                    // </div>\r\n                                })\r\n                            }\r\n                        </form>\r\n                    </div>\r\n                )\r\n            }\r\n            \r\n        </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n","import React,{useState} from 'react'\r\nimport './style.scss'\r\n\r\nexport default function SingleChoice({list}) {\r\n  const [listValue, setListValue] = useState(list)\r\n  const [checked, setChecked] = useState(list[0].value)\r\n\r\n  const onChangeChecked = (e) =>{\r\n      setChecked(e.target.value)\r\n  }\r\n\r\n  console.log(checked)\r\n\r\n  return (\r\n    <div className=\"single-choice\" style={{margin:\"auto\", width:\"150px\",marginTop:\"20px\"}}>\r\n        {\r\n            listValue.map((item)=>{\r\n                return <label className=\"wraper-radio\" key={item.value}>{item.name}\r\n                    <input type=\"radio\" checked={item.value === checked} name=\"radio\" value={item.value} onChange={onChangeChecked}/>\r\n                    <span className=\"checkmark\"></span>\r\n                </label>\r\n            })\r\n        }\r\n\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport CheckBoxGroup from \"../../components/CheckboxGroup\";\r\nimport CheckBoxGroupNotSearch from \"../../components/CheckBoxGroupNotSearch\";\r\nimport DialogErrorMessage from \"../../components/DialogMessage/DialogErrorMessage\";\r\nimport DialogInfoMessage from \"../../components/DialogMessage/DialogInfoMessage\";\r\nimport DialogWarningMessage from \"../../components/DialogMessage/DialogWarningMessage\";\r\nimport MultiChoice from \"../../components/MultiChoice\";\r\nimport RadioGroup from \"../../components/RadioGroup/index\";\r\nimport SingleChoice from \"../../components/SingleChoice\";\r\n\r\nexport default function DashBoard() {\r\n    const listRadio = [\r\n        { name: \"English\", value: \"english\" },\r\n        { name: \"Spanish\", value: \"spanish\" },\r\n        { name: \"Vietnamese\", value: \"vietnamese\" },\r\n    ];\r\n    const listCheckBox = [\r\n        { name: \"English\", value: \"english\", checked: false },\r\n        { name: \"Spanish\", value: \"spanish\", checked: false },\r\n        { name: \"Vietnamese\", value: \"vietnamese\", checked: false },\r\n    ];\r\n    const actionProp = () =>{\r\n      console.log(\"code here\")\r\n    }\r\n  return (\r\n    <div>\r\n        <RadioGroup list={listRadio} />\r\n        <CheckBoxGroup list={listCheckBox} />\r\n        <CheckBoxGroupNotSearch list={listCheckBox} />\r\n        <MultiChoice list={listCheckBox} />\r\n        <SingleChoice list={listCheckBox} />\r\n\r\n        {/* Dialog mess */}\r\n\r\n        <DialogWarningMessage titleBody={false} onOke={actionProp}/>\r\n        <DialogInfoMessage titleBody={false} leftButton={false} />\r\n        <DialogErrorMessage titleBody={false} />\r\n    </div>\r\n  )\r\n}\r\n"],"names":["CheckBoxGroupNotSearch","list","useState","isShow","setIsShow","listValue","setListValue","onChangeValue","e","result","map","item","value","target","checked","className","src","style","width","height","alt","name","marginLeft","onClick","state","type","onChange","CheckBoxGroup","keysearch","setKeySearch","listSearch","setListSearch","length","resultSearch","useEffect","trim","filter","toLowerCase","indexOf","forEach","i","DialogErrorMessage","props","titleBody","visible","setVisible","onCancel","title","centered","closable","footer","marginRight","DialogInfoMessage","leftButton","DialogWarningMessage","onOke","MultiChoice","margin","marginTop","RadioGroup","setChecked","renderHeader","useMemo","checkedCurrent","SingleChoice","onChangeChecked","console","log","DashBoard","listCheckBox"],"sourceRoot":""}