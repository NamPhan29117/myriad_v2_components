{"version":3,"file":"static/js/794.d07bf68e.chunk.js","mappings":"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","sources":["pages/TestLayoutReact/index.jsx"],"sourcesContent":["import React, { useState, useReducer } from \"react\";\r\nimport \"./style.scss\";\r\nimport \"/node_modules/react-grid-layout/css/styles.css\";\r\nimport \"/node_modules/react-resizable/css/styles.css\";\r\nimport GridLayout from \"react-grid-layout\";\r\nimport { Modal, Select } from \"antd\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faGear, faX } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport classNames from \"classnames\";\r\n\r\nconst data = [\r\n  { i: \"\" + Date.now(), x: 0, y: 0, w: 2, h: 2, title: \"Example widget\" },\r\n];\r\n\r\nexport default function Index() {\r\n  const initialState = { dataLayout: data };\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [width, setWidth] = useState(\"\");\r\n  const [height, setHeight] = useState(\"\");\r\n  const [itemResize, setItemResize] = useState(null);\r\n  const [activeWidgetCatalog, setActiveWidgetCatalog] = useState(undefined);\r\n  const [itemHasAdd, setItemHasAdd] = useState(null);\r\n  const { Option } = Select;\r\n\r\n  const { handleSubmit } = useForm();\r\n\r\n  function handleChangeWidth(value) {\r\n    const updateItem = {\r\n      ...itemResize,\r\n      w: value,\r\n    };\r\n\r\n    setItemResize(updateItem);\r\n  }\r\n\r\n  function handleChangeHeight(value) {\r\n    const updateItem = {\r\n      ...itemResize,\r\n      h: value,\r\n    };\r\n\r\n    setItemResize(updateItem);\r\n  }\r\n\r\n  const handlerDataLayout = (state, action) => {\r\n    switch (action.type) {\r\n      case \"ON_DELETE_WIDGET\": {\r\n        const dataHandle = [...state.dataLayout];\r\n        const updateData = dataHandle.filter(\r\n          (item) => item.i !== action.payload\r\n        );\r\n        return {\r\n          ...state,\r\n          dataLayout: updateData,\r\n        };\r\n      }\r\n\r\n      case \"ON_SAVE_WIDGET_RESIZE\": {\r\n        const dataHandle = [...state.dataLayout];\r\n        const updateData = dataHandle.map((item) => {\r\n          if (item.i === action.payload.i) {\r\n            item = action.payload;\r\n          }\r\n          return item;\r\n        });\r\n        return {\r\n          ...state,\r\n          dataLayout: updateData,\r\n        };\r\n      }\r\n\r\n      case \"ON_ADD_WIDGET\": {\r\n        const dataHandle = [...state.dataLayout];\r\n        const updateData = [...dataHandle, action.payload];\r\n\r\n        return {\r\n          ...state,\r\n          dataLayout: updateData,\r\n        };\r\n      }\r\n\r\n      default:\r\n        throw new Error(\"Load data error\");\r\n    }\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(handlerDataLayout, initialState);\r\n  console.log((state.dataLayout.length * 2) % 12);\r\n  const widgetCatalogs = [\r\n    {\r\n      title: \"Assigned to Me\",\r\n      description:\r\n        \"Allows team members to quickly view and manage work Allows team members to quickly view and manage work\",\r\n      i: \"\" + Date.now(),\r\n      x: (state.dataLayout.length * 2) % 12,\r\n      y: 0, // puts it at the bottom\r\n      w: 2,\r\n      h: 2,\r\n    },\r\n  ];\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const onDeleteWidget = (id) => {\r\n    dispatch({\r\n      type: \"ON_DELETE_WIDGET\",\r\n      payload: id,\r\n    });\r\n  };\r\n\r\n  const editAbleWidget = (item) => {\r\n    setItemResize(item);\r\n    setTimeout(() => {\r\n      setIsModalVisible(true);\r\n    }, 0);\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    dispatch(\r\n      {\r\n        type: \"ON_SAVE_WIDGET_RESIZE\",\r\n        payload: itemResize,\r\n      },\r\n      setIsModalVisible(false)\r\n    );\r\n  };\r\n\r\n  const onAddWidget = () => {\r\n    if (itemHasAdd) {\r\n      dispatch({\r\n        type: \"ON_ADD_WIDGET\",\r\n        payload: itemHasAdd,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"v-scroll-auto flex flex-grow relative region-content\"\r\n      data-renderedregion=\"content\"\r\n      role=\"main\"\r\n    >\r\n      <div className=\"dashboard-view\">\r\n        <div className=\"absolute-fill bolt-page v-scroll-auto flex-column bolt-page-white\">\r\n          <div className=\"dashboard-content flex-grow flex-row scroll-hidden\">\r\n            {/* PHAN TASK */}\r\n            <div className=\"primary-content flex-grow flex-column scroll-hidden\">\r\n              <div className=\"flex-grow flex-column scroll-hidden\">\r\n                <div className=\"scroll-auto flex-grow flex-column\">\r\n                  <div className=\"devops-dashboard-grid flex-grow editable\">\r\n                    <GridLayout\r\n                      className=\"layout\"\r\n                      layout={state.dataLayout}\r\n                      cols={12}\r\n                      // compactType=\"horizontal\"\r\n                      verticalCompact={false}\r\n                      compactType={null}\r\n                      rowHeight={160}\r\n                      width={2030}\r\n                      onLayoutChange={(layout) => console.log(layout)}\r\n                      isResizable={false}\r\n                    >\r\n                      {state.dataLayout.map((item) => (\r\n                        <div key={item.i} className=\"widget-layout\">\r\n                          <div className=\"wrap-widget\">\r\n                            <div className=\"widget-header\">\r\n                              <div className=\"left\">\r\n                                {item.title ? item.title : \"Test Widget\"}\r\n                              </div>\r\n                              <div className=\"right\">\r\n                                <div\r\n                                  onClick={() => {\r\n                                    editAbleWidget(item);\r\n                                  }}\r\n                                >\r\n                                  <FontAwesomeIcon\r\n                                    icon={faGear}\r\n                                    size=\"1x\"\r\n                                    color=\"#666666\"\r\n                                  />\r\n                                </div>\r\n                                <div onClick={() => onDeleteWidget(item.i)}>\r\n                                  <FontAwesomeIcon\r\n                                    icon={faX}\r\n                                    size=\"1x\"\r\n                                    color=\"rgba(232,17,35,1)\"\r\n                                  />\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"widget-body\"></div>\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </GridLayout>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <Modal\r\n              title={\r\n                <span className=\"section-title-s2ix section-title-edit\">\r\n                  Configuration\r\n                </span>\r\n              }\r\n              visible={isModalVisible}\r\n              onCancel={handleCancel}\r\n              destroyOnClose={true}\r\n              className=\"modal-resize\"\r\n              width={450}\r\n              footer={null}\r\n            >\r\n              <form onSubmit={handleSubmit(onSubmit)}>\r\n                <div className=\"custom-body\">\r\n                  <div className=\"wrap-select\">\r\n                    <div className=\"custom-select\">\r\n                      <div\r\n                        style={{ marginBottom: \"5px\" }}\r\n                        className=\"main-text-s2ix\"\r\n                      >\r\n                        Width\r\n                      </div>\r\n                      <Select\r\n                        defaultValue={itemResize ? itemResize.w : 1}\r\n                        style={{ width: \"100%\" }}\r\n                        onChange={handleChangeWidth}\r\n                      >\r\n                        {[1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map((item) => {\r\n                          return (\r\n                            <Option value={item} key={item}>\r\n                              {item}\r\n                            </Option>\r\n                          );\r\n                        })}\r\n                      </Select>\r\n                    </div>\r\n                    <div className=\"custom-select\">\r\n                      <div\r\n                        style={{ marginBottom: \"5px\" }}\r\n                        className=\"main-text-s2ix\"\r\n                      >\r\n                        Height\r\n                      </div>\r\n                      <Select\r\n                        defaultValue={itemResize ? itemResize.h : 1}\r\n                        style={{ width: \"100%\" }}\r\n                        onChange={handleChangeHeight}\r\n                      >\r\n                        {[1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map((item) => {\r\n                          return (\r\n                            <Option value={item} key={item}>\r\n                              {item}\r\n                            </Option>\r\n                          );\r\n                        })}\r\n                      </Select>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"left-auto button-save-widget\">\r\n                    <input type=\"submit\" value=\"Save\" />\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </Modal>\r\n            {/* PHAN WIDGET */}\r\n            <div className=\"dashboards-widget-inline-catalog flex-column flex-noshrink scroll-hidden\">\r\n              <div className=\"section-title-s2ix header-add-widget\">\r\n                Add Widget\r\n              </div>\r\n              <div className=\"list-widget\">\r\n                {widgetCatalogs.map((item) => {\r\n                  return (\r\n                    <div\r\n                      className={classNames(\r\n                        {\r\n                          active: item.i === activeWidgetCatalog,\r\n                        },\r\n                        \"widget-catalog-entry\"\r\n                      )}\r\n                      key={item}\r\n                      onClick={() => {\r\n                        setItemHasAdd(item);\r\n                        setActiveWidgetCatalog(item.i);\r\n                      }}\r\n                    >\r\n                      <div className=\"widget-catalog-image\">\r\n                        <img\r\n                          alt=\"\"\r\n                          src=\"https://dev.azure.com/namphan0323/_static/Widgets/CatalogIcons/assignedToMe.png\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"widget-details\">\r\n                        <div className=\"widget-details-title section-title-s2ix\">\r\n                          {item.title}\r\n                        </div>\r\n                        <div className=\"widget-description main-text-s2ix\">\r\n                          {item.description}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n              <div className=\"footer-add-widget\">\r\n                <button\r\n                  key=\"right\"\r\n                  className=\"button button--secondary left-auto btn-add-widget\"\r\n                  onClick={() => onAddWidget()}\r\n                >\r\n                  Add\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["data","i","Date","now","x","y","w","h","title","Index","initialState","dataLayout","useState","isModalVisible","setIsModalVisible","itemResize","setItemResize","undefined","activeWidgetCatalog","setActiveWidgetCatalog","itemHasAdd","setItemHasAdd","Option","Select","handleSubmit","useForm","useReducer","state","action","type","updateData","filter","item","payload","map","dataHandle","Error","dispatch","console","log","length","widgetCatalogs","description","className","role","layout","cols","verticalCompact","compactType","rowHeight","width","onLayoutChange","isResizable","onClick","setTimeout","editAbleWidget","icon","faGear","size","color","id","faX","visible","onCancel","destroyOnClose","footer","onSubmit","style","marginBottom","defaultValue","onChange","value","updateItem","classNames","active","alt","src"],"sourceRoot":""}