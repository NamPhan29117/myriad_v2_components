{"version":3,"file":"static/js/794.9db1191f.chunk.js","mappings":"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","sources":["pages/TestLayoutReact/index.jsx"],"sourcesContent":["import React, { useState, useReducer, useEffect } from \"react\";\r\n\r\nimport \"/node_modules/react-grid-layout/css/styles.css\";\r\nimport \"/node_modules/react-resizable/css/styles.css\";\r\nimport \"./style.scss\";\r\nimport GridLayout from \"react-grid-layout\";\r\nimport { Modal, Select } from \"antd\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faGear, faX } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport classNames from \"classnames\";\r\n\r\nconst data = [\r\n  {\r\n    i: \"\" + Date.now(),\r\n    x: 0,\r\n    y: 0,\r\n    w: 2,\r\n    h: 2,\r\n    title: \"Example widget 1\",\r\n  },\r\n];\r\n\r\nexport default function Index() {\r\n  const initialState = { dataLayout: data };\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  const [itemResize, setItemResize] = useState(null);\r\n  const [activeWidgetCatalog, setActiveWidgetCatalog] = useState(undefined);\r\n  const [itemHasAdd, setItemHasAdd] = useState(null);\r\n  const [dropWidget, setDropWidget] = useState(undefined);\r\n  const { Option } = Select;\r\n\r\n  const { handleSubmit } = useForm();\r\n\r\n  function handleChangeWidth(value) {\r\n    const updateItem = {\r\n      ...itemResize,\r\n      w: value,\r\n    };\r\n\r\n    setItemResize(updateItem);\r\n  }\r\n\r\n  function handleChangeHeight(value) {\r\n    const updateItem = {\r\n      ...itemResize,\r\n      h: value,\r\n    };\r\n\r\n    setItemResize(updateItem);\r\n  }\r\n\r\n  const handlerDataLayout = (state, action) => {\r\n    switch (action.type) {\r\n      case \"ON_DELETE_WIDGET\": {\r\n        const dataHandle = [...state.dataLayout];\r\n        const updateData = dataHandle.filter(\r\n          (item) => item.i !== action.payload\r\n        );\r\n        return {\r\n          ...state,\r\n          dataLayout: updateData,\r\n        };\r\n      }\r\n\r\n      case \"ON_SAVE_WIDGET_RESIZE\": {\r\n        const dataHandle = [...state.dataLayout];\r\n        const updateData = dataHandle.map((item) => {\r\n          if (item.i === action.payload.i) {\r\n            item = action.payload;\r\n          }\r\n          return item;\r\n        });\r\n        return {\r\n          ...state,\r\n          dataLayout: updateData,\r\n        };\r\n      }\r\n\r\n      case \"ON_ADD_WIDGET\": {\r\n        const dataHandle = [...state.dataLayout];\r\n        const updateData = [...dataHandle, action.payload];\r\n\r\n        return {\r\n          ...state,\r\n          dataLayout: updateData,\r\n        };\r\n      }\r\n\r\n      default:\r\n        throw new Error(\"Load data error\");\r\n    }\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(handlerDataLayout, initialState);\r\n  const widgetCatalogs = React.useMemo(() => {\r\n    return [\r\n      {\r\n        id: \"id-1\",\r\n        title: \"Assigned to Me\",\r\n        img: \"https://dev.azure.com/namphan0323/_static/Widgets/CatalogIcons/assignedToMe.png\",\r\n        description:\r\n          \"Allows team members to quickly view and manage work Allows team members to quickly view and manage work\",\r\n        i: \"1\" + Date.now(),\r\n        x: (state.dataLayout.length * 2) % 12,\r\n        y: 0, // puts it at the bottom\r\n        w: 2,\r\n        h: 2,\r\n      },\r\n      {\r\n        id: \"id-2\",\r\n        title: \"Build history\",\r\n        img: \"https://dev.azure.com/namphan0323/_static/Widgets/CatalogIcons/buildChart.png\",\r\n        description: \"Shows the build history of a selected build pipeline.\",\r\n        i: \"2\" + Date.now(),\r\n        x: (state.dataLayout.length * 2) % 12,\r\n        y: 0, // puts it at the bottom\r\n        w: 3,\r\n        h: 3,\r\n      },\r\n    ];\r\n  }, [state.dataLayout.length]);\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const onDeleteWidget = (id) => {\r\n    dispatch({\r\n      type: \"ON_DELETE_WIDGET\",\r\n      payload: id,\r\n    });\r\n  };\r\n\r\n  const editAbleWidget = (item) => {\r\n    setItemResize(item);\r\n    setTimeout(() => {\r\n      setIsModalVisible(true);\r\n    }, 0);\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    dispatch(\r\n      {\r\n        type: \"ON_SAVE_WIDGET_RESIZE\",\r\n        payload: itemResize,\r\n      },\r\n      setIsModalVisible(false)\r\n    );\r\n  };\r\n\r\n  const onAddWidget = () => {\r\n    if (itemHasAdd) {\r\n      dispatch({\r\n        type: \"ON_ADD_WIDGET\",\r\n        payload: itemHasAdd,\r\n      });\r\n    }\r\n  };\r\n\r\n  const onDrop = (layout, layoutItem, _event) => {\r\n    const { x, y, w, h, i } = layoutItem;\r\n    const itemHasAdd = {\r\n      x,\r\n      y,\r\n      w,\r\n      h,\r\n      i,\r\n    };\r\n    dispatch({\r\n      type: \"ON_ADD_WIDGET\",\r\n      payload: itemHasAdd,\r\n    });\r\n  };\r\n\r\n  // if (dropWidget) {\r\n  //   console.log(dropWidget);\r\n  // }\r\n\r\n  return (\r\n    <div\r\n      className=\"v-scroll-auto flex flex-grow relative region-content\"\r\n      data-renderedregion=\"content\"\r\n      role=\"main\"\r\n    >\r\n      <div className=\"dashboard-view\">\r\n        <div className=\"absolute-fill bolt-page v-scroll-auto flex-column bolt-page-white\">\r\n          <div className=\"dashboard-content flex-grow flex-row scroll-hidden\">\r\n            {/* PHAN TASK */}\r\n            <div className=\"primary-content flex-grow flex-column scroll-hidden\">\r\n              <div className=\"flex-grow flex-column scroll-hidden\">\r\n                <div className=\"scroll-auto flex-grow flex-column\">\r\n                  <div className=\"devops-dashboard-grid flex-grow editable\">\r\n                    <GridLayout\r\n                      className=\"layout\"\r\n                      layout={state.dataLayout}\r\n                      cols={12}\r\n                      compactType={null}\r\n                      rowHeight={160}\r\n                      width={2030}\r\n                      // onLayoutChange={(layout) => getNewLayout(layout)}\r\n                      isResizable={false}\r\n                      onDrop={onDrop}\r\n                      isDroppable={true}\r\n                      droppingItem={{\r\n                        i: \"\" + Date.now(),\r\n                        w: dropWidget ? dropWidget.w : 1,\r\n                        h: dropWidget ? dropWidget.h : 1,\r\n                      }}\r\n                    >\r\n                      {state.dataLayout.map((item) => (\r\n                        <div key={item.i} className=\"widget-layout\">\r\n                          <div className=\"wrap-widget\">\r\n                            <div className=\"widget-header\">\r\n                              <div className=\"left\">\r\n                                {item.title ? item.title : \"Test Widget\"}\r\n                              </div>\r\n                              <div className=\"right\">\r\n                                <div\r\n                                  onClick={() => {\r\n                                    editAbleWidget(item);\r\n                                  }}\r\n                                >\r\n                                  <FontAwesomeIcon\r\n                                    icon={faGear}\r\n                                    size=\"1x\"\r\n                                    color=\"#666666\"\r\n                                  />\r\n                                </div>\r\n                                <div onClick={() => onDeleteWidget(item.i)}>\r\n                                  <FontAwesomeIcon\r\n                                    icon={faX}\r\n                                    size=\"1x\"\r\n                                    color=\"rgba(232,17,35,1)\"\r\n                                  />\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"widget-body\"></div>\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </GridLayout>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <Modal\r\n              title={\r\n                <span className=\"section-title-s2ix section-title-edit\">\r\n                  Configuration\r\n                </span>\r\n              }\r\n              visible={isModalVisible}\r\n              onCancel={handleCancel}\r\n              destroyOnClose={true}\r\n              className=\"modal-resize\"\r\n              width={450}\r\n              footer={null}\r\n            >\r\n              <form onSubmit={handleSubmit(onSubmit)}>\r\n                <div className=\"custom-body\">\r\n                  <div className=\"wrap-select\">\r\n                    <div className=\"custom-select\">\r\n                      <div\r\n                        style={{ marginBottom: \"5px\" }}\r\n                        className=\"main-text-s2ix\"\r\n                      >\r\n                        Width\r\n                      </div>\r\n                      <Select\r\n                        defaultValue={itemResize ? itemResize.w : 1}\r\n                        style={{ width: \"100%\" }}\r\n                        onChange={handleChangeWidth}\r\n                      >\r\n                        {[1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map((item) => {\r\n                          return (\r\n                            <Option value={item} key={item}>\r\n                              {item}\r\n                            </Option>\r\n                          );\r\n                        })}\r\n                      </Select>\r\n                    </div>\r\n                    <div className=\"custom-select\">\r\n                      <div\r\n                        style={{ marginBottom: \"5px\" }}\r\n                        className=\"main-text-s2ix\"\r\n                      >\r\n                        Height\r\n                      </div>\r\n                      <Select\r\n                        defaultValue={itemResize ? itemResize.h : 1}\r\n                        style={{ width: \"100%\" }}\r\n                        onChange={handleChangeHeight}\r\n                      >\r\n                        {[1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map((item) => {\r\n                          return (\r\n                            <Option value={item} key={item}>\r\n                              {item}\r\n                            </Option>\r\n                          );\r\n                        })}\r\n                      </Select>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"left-auto button-save-widget\">\r\n                    <input type=\"submit\" value=\"Save\" />\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </Modal>\r\n            {/* PHAN WIDGET */}\r\n            <div className=\"dashboards-widget-inline-catalog flex-column flex-noshrink scroll-hidden\">\r\n              <div className=\"section-title-s2ix header-add-widget\">\r\n                Add Widget\r\n              </div>\r\n              <div className=\"list-widget\">\r\n                {widgetCatalogs.map((item) => {\r\n                  return (\r\n                    <div\r\n                      key={item.id}\r\n                      id={item.id}\r\n                      draggable={true}\r\n                      unselectable=\"on\"\r\n                      // this is a hack for firefox\r\n                      // Firefox requires some kind of initialization\r\n                      // which we can do by adding this attribute\r\n                      // @see https://bugzilla.mozilla.org/show_bug.cgi?id=568313\r\n\r\n                      onDragStart={(e) => {\r\n                        const itemDrop = widgetCatalogs.filter((item) => {\r\n                          return item.id === e.target.id;\r\n                        })[0];\r\n                        setDropWidget(itemDrop);\r\n                        e.dataTransfer.setData(\"text/plain\", \"\");\r\n                      }}\r\n                      className={classNames(\r\n                        {\r\n                          active: item.i === activeWidgetCatalog,\r\n                        },\r\n                        \"widget-catalog-entry droppable-element\"\r\n                      )}\r\n                      onClick={() => {\r\n                        setItemHasAdd(item);\r\n                        setActiveWidgetCatalog(item.i);\r\n                      }}\r\n                    >\r\n                      <div className=\"widget-catalog-image\">\r\n                        <img alt=\"\" src={item.img} />\r\n                      </div>\r\n                      <div className=\"widget-details\">\r\n                        <div className=\"widget-details-title section-title-s2ix\">\r\n                          {item.title}\r\n                        </div>\r\n                        <div className=\"widget-description main-text-s2ix\">\r\n                          {item.description}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n              <div className=\"footer-add-widget\">\r\n                <button\r\n                  key=\"right\"\r\n                  className=\"button button--secondary left-auto btn-add-widget\"\r\n                  onClick={() => onAddWidget()}\r\n                >\r\n                  Add\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["data","i","Date","now","x","y","w","h","title","Index","initialState","dataLayout","useState","isModalVisible","setIsModalVisible","itemResize","setItemResize","undefined","activeWidgetCatalog","setActiveWidgetCatalog","itemHasAdd","setItemHasAdd","dropWidget","setDropWidget","Option","Select","handleSubmit","useForm","useReducer","state","action","type","updateData","filter","item","payload","map","dataHandle","Error","dispatch","widgetCatalogs","React","id","img","description","length","className","role","layout","cols","compactType","rowHeight","width","isResizable","onDrop","layoutItem","_event","isDroppable","droppingItem","onClick","setTimeout","editAbleWidget","icon","faGear","size","color","faX","visible","onCancel","destroyOnClose","footer","onSubmit","style","marginBottom","defaultValue","onChange","value","updateItem","draggable","unselectable","onDragStart","e","itemDrop","target","dataTransfer","setData","classNames","active","alt","src"],"sourceRoot":""}